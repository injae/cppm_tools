function(append_cache cache_var data type)
    set(spaced_string " ${${cache_var}} ")
    string(FIND "${spaced_string}" " ${data} " data_index)
    if(NOT data_index EQUAL -1)
        return()
    endif()
    string(COMPARE EQUAL "" "${${cache_var}}" is_empty)
    if(is_empty)
        set("${cache_var}" "${data}" CACHE "${type}" "${ARGN}" FORCE)
    else()
        set("${cache_var}" "${data} ${${cache_var}}" CACHE "${type}" "${message}" FORCE)
    endif()
endfunction()


function(set_cache cache_var data type)
    set(spaced_string " ${${cache_var}} ")
    string(FIND "${spaced_string}" " ${data} " data_index)
    if(NOT data_index EQUAL -1)
        return()
    endif()
    set("${cache_var}" "${data}" CACHE "${type}" "${ARGN}" FORCE)
endfunction()


function(default_cache cache_var data type)
    set(spaced_string " ${${cache_var}} ")
    string(FIND "${spaced_string}" " ${data} " data_index)
    if(NOT data_index EQUAL -1)
        return()
    endif()
    string(COMPARE EQUAL "" "${${cache_var}}" is_empty)
    if(is_empty)
        set("${cache_var}" "${data}" CACHE "${type}" "${ARGN}" FORCE)
    endif()
endfunction()


macro(add_compiler_option cache_var data)
    append_cache("${cache_var}" "${data}" STRING "compiler options")
endmacro()
 
macro(cppm_set cache_var data)
    set(_spaced_string " ${${cache_var}} ")
    string(FIND "${_spaced_string}" " ${data} " _data_index)
    if(NOT _data_index EQUAL -1)
        return()
    else()
        set("${cache_var}" "${data}" CACHE INTERNAL "${ARGN}" FORCE)
    endif()
endmacro()
