function(cppm_target_dependencies)
    cmake_parse_arguments(ARG "" "" "PRIVATE;PUBLIC;INTERFACE" ${ARGN})
    list(GET ARG_UNPARSED_ARGUMENTS 0 name)
    if(${_O_${name}})
        if(DEFINED ARG_PUBLIC)
            foreach(dep IN LISTS ARG_PUBLIC)
                get_target_property(module ${dep}_info CPPM_MODULE)
                target_link_libraries(${name} PUBLIC ${module})
                get_target_property(desc ${dep}_info CPPM_DESCRIPTION)
                cppm_print("${name} <== ${desc}")
            endforeach()
            set_property(TARGET ${name} APPEND PROPERTY CPPM_DEPENDENCIES ${ARG_PUBLIC})
        endif() 
        if(DEFINED ARG_PRIVATE)
            foreach(dep IN LISTS ARG_PRIVATE)
                get_target_property(module ${dep}_info CPPM_MODULE)
                target_link_libraries(${name} PRIVATE ${module})
                get_target_property(desc ${dep}_info CPPM_DESCRIPTION)
                cppm_print("${name} <== ${desc}")
            endforeach()
            set_property(TARGET ${name} APPEND PROPERTY CPPM_DEPENDENCIES ${ARG_PRIVATE})
        endif()
        if(DEFINED ARG_INTERFACE)
            foreach(dep IN LISTS ARG_INTERFACE)
                get_target_property(module ${dep}_info CPPM_MODULE)
                target_link_libraries(${name} INTERFACE ${module})
                get_target_property(desc ${dep}_info CPPM_DESCRIPTION)
                cppm_print("${name} <== ${desc}")
            endforeach()
            set_property(TARGET ${name}_info APPEND PROPERTY CPPM_DEPENDENCIES ${ARG_INTERFACE})
        endif()

    endif()
endfunction()

    #if(has_deps)
    #    set(deps)
    #    string(REPLACE " " "\n-- [cppm]    " pub_dep "${ARG_PRIVATE}")
    #    string(REPLACE ";" "\n-- [cppm]    " pub_dep "${ARG_PRIVATE}")
    #    list(APPEND deps "${pub_dep}")
    #    string(REPLACE " " "\n-- [cppm]    " pri_dep "${ARG_PUBLIC}")
    #    string(REPLACE ";" "\n-- [cppm]    " pri_dep "${ARG_PUBLIC}")
    #    list(APPEND deps "${pri_dep}")
    #    string(REPLACE " " "\n-- [cppm]    " int_dep "${ARG_INTERFACE}")
    #    string(REPLACE ";" "\n-- [cppm]    " int_dep "${ARG_INTERFACE}")
    #    list(APPEND deps "${int_dep}")
    #    string(REPLACE ";" " " deps "${deps}")
    #    message(STATUS "[cppm] Dependencies:")
    #    message(STATUS "[cppm]    ${deps}")
    #endif()
